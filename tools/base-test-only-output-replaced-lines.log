Run-Command63[1] = msr -c -j -z "c:\Program Files\LLVM\bin\clang.exe" -x \ -o \\
c:\\Program Files\\LLVM\\bin\\clang.exe
Replaced, input-length(35) - output-length(39) = -4. Replaced. Input string = c:\Program Files\LLVM\bin\clang.exe 
Return-Value63[1] = 1 : msr -c -j -z "c:\Program Files\LLVM\bin\clang.exe" -x \ -o \\

Run-Command63[2] = msr -c -j -z "c:\Program Files\LLVM\bin\clang.exe" -t \\ -o \\
Not replaced, input-length(35) - output-length(35) = 0. Not replaced. Input string = c:\Program Files\LLVM\bin\clang.exe 
Return-Value63[2] = 0 : msr -c -j -z "c:\Program Files\LLVM\bin\clang.exe" -t \\ -o \\

Run-Command63[3] = msr -c -j -z "c:\Program Files\LLVM\bin\clang.exe" -t "\\\\" -o \\
Not replaced, input-length(35) - output-length(35) = 0. Not replaced. Input string = c:\Program Files\LLVM\bin\clang.exe 
Return-Value63[3] = 0 : msr -c -j -z "c:\Program Files\LLVM\bin\clang.exe" -t "\\\\" -o \\

Run-Command63[4] = msr -c -j -p sample-file.txt -it node --nt "node\d+" -o "NODE"
sample-file.txt:48:   <as::item ref="NODECitOnly" />
sample-file.txt:62:   <as::item ref="NODECitOnly" />
sample-file.txt:67:   <Subject>NODE 2 title in body for test</Subject>
sample-file.txt:75:   <as::item ref="NODECitOnly" />
Replaced 4 lines(2.99%) in 1 files(100%)
Return-Value63[4] = 4 : msr -c -j -p sample-file.txt -it node --nt "node\d+" -o "NODE"

Run-Command63[5] = msr -c -j -p sample-file.txt -b "^\s*<Tag" -Q "^\s*</Tag" -t "Node[13]" --nx node3 -ai -x Node -o myNode  ## Must have only block Node1 and replaced
sample-file.txt:47: <Tag Name="myNode1">
sample-file.txt:48:   <as::item ref="NodeCitOnly" />
sample-file.txt:49:   <as::item ref="myNode1Config" />
sample-file.txt:50:   <MailTo>Alex@abc.com</MailTo>
sample-file.txt:51:   <as::item ref="myNode1Body">
sample-file.txt:52:     <as::pairs>
sample-file.txt:53:       <as::pair name="MailTo">Bob@abc.com</as::pair>
sample-file.txt:54:       <as::pair name="Function">#FUNCTION#</as::pair>
sample-file.txt:55:       <as::pair name="Interval">#THRESHOLD_1#</as::pair>
sample-file.txt:56:       <as::pair name="Switch">#THRESHOLD_2#</as::pair>
sample-file.txt:57:     </as::pairs>
sample-file.txt:58:   </as::item>
sample-file.txt:59: </Tag>
Replaced 1 blocks(33.33%) with 3 lines(2.24%) in 1 files(100%)
Return-Value63[5] = 1 : msr -c -j -p sample-file.txt -b "^\s*<Tag" -Q "^\s*</Tag" -t "Node[13]" --nx node3 -ai -x Node -o myNode  ## Must have only block Node1 and replaced

Run-Command63[6] = msr -c -j -p sample-file.txt -ib "^\s*enum" -q "\};" -S -t "([\r\n]+)\s+" -o "$1  "  ## Single line regex matching
sample-file.txt:7: enum class LineType {
  NotMatchedLine = 0,
  MatchedLine = 1,
  UpLine = 2,
  DownLine = 3
};
Replaced 6 lines(50.00%) in 1 files(100%)
Return-Value63[6] = 6 : msr -c -j -p sample-file.txt -ib "^\s*enum" -q "\};" -S -t "([\r\n]+)\s+" -o "$1  "  ## Single line regex matching

Run-Command63[7] = msr -c -j -p sample-file.txt -ib "^\s*enum" -q "\};" -t "^\s+" -o "  " -a -P
enum class LineType {
  NotMatchedLine = 0,
  MatchedLine = 1,
  UpLine = 2,
  DownLine = 3
};
Replaced 4 lines(33.33%) in 1 files(100%)
Return-Value63[7] = 4 : msr -c -j -p sample-file.txt -ib "^\s*enum" -q "\};" -t "^\s+" -o "  " -a -P

Run-Command63[8] = msr -c -j -p sample-file.txt -i -b "class DeferredRun" -Q "^};" -t "(Deferred\w*)" -o "$1Replaced"
sample-file.txt:14: class DeferredRunReplaced {
sample-file.txt:16:         DeferredRunReplaced(const std::function<void()>& run) : _run(run) { }
sample-file.txt:17:         ~DeferredRunReplaced() {
Replaced 1 blocks(100%) with 3 lines(2.24%) in 1 files(100%)
Return-Value63[8] = 1 : msr -c -j -p sample-file.txt -i -b "class DeferredRun" -Q "^};" -t "(Deferred\w*)" -o "$1Replaced"

Run-Command63[9] = msr -c -j -p example-commands.bat -it "^msr\s+(-c\s+)?" -L 3 -o "msr -c " -H 9
example-commands.bat:250: msr -c -z "if exist Node1.tmp del Node1.tmp" -XPI
Replaced 1 lines(0.40%) in 1 files(100%)
Return-Value63[9] = 1 : msr -c -j -p example-commands.bat -it "^msr\s+(-c\s+)?" -L 3 -o "msr -c " -H 9

Run-Command63[10] = msr -c -j -p example-commands.bat -x bat -o BAT -L 3 -H 5 -T 5      ## Plain text replacing to BAT , begin-row-3, and show top 5 and bottom 5 lines
example-commands.bat:18: msr -c -p %~dp0 -f BAT -l -PAC -H 0
example-commands.bat:19: msr -c -p %~dp0 -f BAT -l -PIC -H 0
example-commands.bat:20: msr -c -p %~dp0 -l -f BAT -H -2 # Should skip top 2 items.
example-commands.bat:21: msr -c -p %~dp0 -l -f BAT -T -2 # Should skip bottom 2 items.
example-commands.bat:22: msr -c -p %~dp0 -l -f BAT -H -2 --sz # Should skip top 2 items.
example-commands.bat:82: msr -c -p %~dp0\example-commands.BAT -ix update -t name -e Names
example-commands.bat:93: msr -c -p %~dp0\example-commands.BAT -x " -B" -t ".*?(\d+\S+ \d+[\d:]+).*"
example-commands.bat:97: msr -c -p %~dp0\example-commands.BAT -it "\w+" -H 0       ## Must NOT out any matched.
example-commands.bat:98: msr -c -p %~dp0\example-commands.BAT -it "\w+" -T 0       ## Must NOT out any matched.
example-commands.bat:99: msr -c -p %~dp0\example-commands.BAT -it just -U 3 -D 3
Replaced 44 lines(17.46%) in 1 files(100%)
Return-Value63[10] = 44 : msr -c -j -p example-commands.bat -x bat -o BAT -L 3 -H 5 -T 5      ## Plain text replacing to BAT , begin-row-3, and show top 5 and bottom 5 lines

Run-Command63[11] = msr -c -j -p example-commands.bat -t bat -o BAT -L 3 -H 5           ## Plain text replacing to BAT , begin-row-3, show top 5 lines
example-commands.bat:18: msr -c -p %~dp0 -f BAT -l -PAC -H 0
example-commands.bat:19: msr -c -p %~dp0 -f BAT -l -PIC -H 0
example-commands.bat:20: msr -c -p %~dp0 -l -f BAT -H -2 # Should skip top 2 items.
example-commands.bat:21: msr -c -p %~dp0 -l -f BAT -T -2 # Should skip bottom 2 items.
example-commands.bat:22: msr -c -p %~dp0 -l -f BAT -H -2 --sz # Should skip top 2 items.
Replaced 44 lines(17.46%) in 1 files(100%)
Return-Value63[11] = 44 : msr -c -j -p example-commands.bat -t bat -o BAT -L 3 -H 5           ## Plain text replacing to BAT , begin-row-3, show top 5 lines

Run-Command63[12] = msr -c -j -p example-commands.bat -t com -x bat -o BAT T -H 5       ## Use both Regex and plain text , replacing from
example-commands.bat:42: msr -c -r -p %~dp0 -f "^(example-commands|sample-file)\.(txt|BAT)$" -l --sz --wt -T 3
example-commands.bat:43: msr -c -r -p %~dp0 -f "^(example-commands|sample-file)\.(txt|BAT)$" -l --wt --sz -H 3 --dsc --s1 1KB --s2 1MB --w1 "2015-07-20 13:20"
example-commands.bat:49: msr -c -p %~dp0\example-commands.BAT -it "class|run" -H 9
example-commands.bat:50: msr -c -p %~dp0\example-commands.BAT -ie "class|run" -H 9
example-commands.bat:51: msr -c -p %~dp0\example-commands.BAT -it "^msr\s+(-c\s+)?" -L 3 -o "msr -c " -H 9
Replaced 36 lines(14.29%) in 1 files(100%)
Return-Value63[12] = 36 : msr -c -j -p example-commands.bat -t com -x bat -o BAT T -H 5       ## Use both Regex and plain text , replacing from

Run-Command63[13] = msr -c -j -p example-commands.bat -x me -o you -ie "you|txt|ping" -L 30 -H 9
example-commands.bat:57: msr -c -p %~dp0\example-commands.bat -t t -L 9 -e you.txt -H 9       ## Coloring Regex-matched/Plain-found/Regex-enhance text youanwhile
example-commands.bat:58: msr -c -p %~dp0\example-commands.bat -x t -L 9 -e you.txt -H 9
example-commands.bat:59: msr -c -p %~dp0\example-commands.bat -x you -L 20 -H 9
example-commands.bat:60: msr -c -p %~dp0\example-commands.bat -x you -L 20 -ie you -H 9
example-commands.bat:61: msr -c -p %~dp0\example-commands.bat -t you -L 20 -ie you -H 9
example-commands.bat:62: msr -c -p %~dp0\example-commands.bat -x you -o you -ie "you|txt|ping" -L 30 -H 9
example-commands.bat:63: msr -c -p %~dp0\example-commands.bat -t you -o you -ie "you|txt|ping" -L 30 -H 9
example-commands.bat:64: msr -c -p %~dp0\example-commands.bat -t you -ie "you|ping|\w+.txt" -L 30 -H 9
example-commands.bat:65: msr -c -p %~dp0\example-commands.bat -x you -ie "you|ping|\w+.txt" -L 30 -H 9
Replaced 33 lines(13.10%) in 1 files(100%)
Return-Value63[13] = 33 : msr -c -j -p example-commands.bat -x me -o you -ie "you|txt|ping" -L 30 -H 9

Run-Command63[14] = msr -c -j -p example-commands.bat -t me -o you -ie "you|txt|ping" -L 30 -H 9
example-commands.bat:57: msr -c -p %~dp0\example-commands.bat -t t -L 9 -e you.txt -H 9       ## Coloring Regex-matched/Plain-found/Regex-enhance text youanwhile
example-commands.bat:58: msr -c -p %~dp0\example-commands.bat -x t -L 9 -e you.txt -H 9
example-commands.bat:59: msr -c -p %~dp0\example-commands.bat -x you -L 20 -H 9
example-commands.bat:60: msr -c -p %~dp0\example-commands.bat -x you -L 20 -ie you -H 9
example-commands.bat:61: msr -c -p %~dp0\example-commands.bat -t you -L 20 -ie you -H 9
example-commands.bat:62: msr -c -p %~dp0\example-commands.bat -x you -o you -ie "you|txt|ping" -L 30 -H 9
example-commands.bat:63: msr -c -p %~dp0\example-commands.bat -t you -o you -ie "you|txt|ping" -L 30 -H 9
example-commands.bat:64: msr -c -p %~dp0\example-commands.bat -t you -ie "you|ping|\w+.txt" -L 30 -H 9
example-commands.bat:65: msr -c -p %~dp0\example-commands.bat -x you -ie "you|ping|\w+.txt" -L 30 -H 9
Replaced 33 lines(13.10%) in 1 files(100%)
Return-Value63[14] = 33 : msr -c -j -p example-commands.bat -t me -o you -ie "you|txt|ping" -L 30 -H 9

Run-Command63[15] = msr -c -j -p example-commands.bat -x name -o NAME -ie "name|come" -U 3 -D 3 -L 16 -H 9
example-commands.bat:63: msr -c -p %~dp0\example-commands.bat -t me -o you -ie "you|txt|ping" -L 30 -H 9
example-commands.bat:64: msr -c -p %~dp0\example-commands.bat -t me -ie "me|ping|\w+.txt" -L 30 -H 9
example-commands.bat:65: msr -c -p %~dp0\example-commands.bat -x me -ie "me|ping|\w+.txt" -L 30 -H 9
example-commands.bat:66: msr -c -p %~dp0\example-commands.bat -x NAME -o NAME -ie "NAME|come" -U 3 -D 3 -L 16 -H 9
example-commands.bat:67: msr -c -p %~dp0\example-commands.bat -t NAME -o NAME -ie NAMEs -H 9
example-commands.bat:68: msr -c -p %~dp0\example-commands.bat -t NAME -o NAME -T 1 -C
example-commands.bat:69: msr -c -p %~dp0\example-commands.bat -it NAME -l
example-commands.bat:70: msr -c -p %~dp0\sample-file.txt -it NAME -l
example-commands.bat:71: msr -c -p %~dp0\example-commands.bat -t NAME -a -o NAME -ie NAMEs -b "come|NAME\w*" -Q "mailTo|Tag" -T 9
Replaced 24 lines(9.52%) in 1 files(100%)
Return-Value63[15] = 24 : msr -c -j -p example-commands.bat -x name -o NAME -ie "name|come" -U 3 -D 3 -L 16 -H 9

Run-Command63[16] = msr -c -j -p example-commands.bat -t name -o NAME -ie Names -H 9
example-commands.bat:66: msr -c -p %~dp0\example-commands.bat -x NAME -o NAME -ie "NAME|come" -U 3 -D 3 -L 16 -H 9
example-commands.bat:67: msr -c -p %~dp0\example-commands.bat -t NAME -o NAME -ie NAMEs -H 9
example-commands.bat:68: msr -c -p %~dp0\example-commands.bat -t NAME -o NAME -T 1 -C
example-commands.bat:69: msr -c -p %~dp0\example-commands.bat -it NAME -l
example-commands.bat:70: msr -c -p %~dp0\sample-file.txt -it NAME -l
example-commands.bat:71: msr -c -p %~dp0\example-commands.bat -t NAME -a -o NAME -ie NAMEs -b "come|NAME\w*" -Q "mailTo|Tag" -T 9
example-commands.bat:73: msr -c -p %~dp0\example-commands.bat -x NAME -o NAME -ie "NAME|come" -T 3
example-commands.bat:74: msr -c -p %~dp0\example-commands.bat -t NAME -o come -ie "NAME|come" -a -L 19 -H 9
example-commands.bat:75: msr -c -p %~dp0\example-commands.bat -t NAME -a -o NAM -ie "NAME|come" -L 19 -H 9
Replaced 24 lines(9.52%) in 1 files(100%)
Return-Value63[16] = 24 : msr -c -j -p example-commands.bat -t name -o NAME -ie Names -H 9

Run-Command63[17] = msr -c -j -p example-commands.bat -t name -o NAME -T 1 -C
example-commands.bat:249: msr -c -p Node1.tmp -PA -e ".All.|4000|8000"  ## This is an expanded xml that has replaced NAME value settings.
Replaced 19 lines(7.54%) in 1 files(100%)
Return-Value63[17] = 19 : msr -c -j -p example-commands.bat -t name -o NAME -T 1 -C

Run-Command63[18] = msr -c -j -p example-commands.bat -t name -a -o NAME -ie Names -b "come|name\w*" -Q "mailTo|Tag" -T 9
example-commands.bat:123: msr -c -p %~dp0\sample-file.txt -b "^\s*\[" -Q "^\s*\[" -t key -a
example-commands.bat:124: msr -c -p %~dp0\sample-file.txt -b "^\s*\[" -Q "^\s*\[" -t key -a -y
example-commands.bat:125: msr -c -p %~dp0\sample-file.txt -b "^\s*\[" -Q "^\s*\[" -a
example-commands.bat:126: msr -c -p %~dp0\sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -a -y
example-commands.bat:127: msr -c -p %~dp0\sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -a
example-commands.bat:128: msr -c -p %~dp0\sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -a -y
example-commands.bat:129: msr -c -p %~dp0\sample-file.txt -b "^\s*<Tag" -Q "^\s*</Tag" --nt Node3 -a
example-commands.bat:246: msr -c -p %~dp0\sample-file.txt -b "<Tag NAME.*?Node1.*?>" -Q "</Tag>" -PA -e "#\S+?#"
example-commands.bat:247: msr -c -p %~dp0\sample-file.txt -b "<Tag NAME.*?Node1.*?>" -Q "</Tag>" -PIC > Node1.tmp
Replaced 7 blocks(87.50%) with 22 lines(8.73%) in 1 files(100%)
Return-Value63[18] = 7 : msr -c -j -p example-commands.bat -t name -a -o NAME -ie Names -b "come|name\w*" -Q "mailTo|Tag" -T 9

Run-Command63[19] = msr -c -j -p example-commands.bat -x name -o NAME -ie "name|come" -T 3
example-commands.bat:247: msr -c -p %~dp0\sample-file.txt -b "<Tag NAME.*?Node1.*?>" -Q "</Tag>" -PIC > Node1.tmp
example-commands.bat:248: (msr -c -p %~dp0\sample-file.txt -it "<NAME>(#.+?#)</NAME>\s*<value>(.+?)</value>" -S -o "msr -x \"$1\" -o \"$2\""  -PAC | msr -t "^\s*(msr -x .*)" -o "$1 -p Node1.tmp -R -H 0" -PAC) |msr -XI -c Automatic extract macro and replace to real values.
example-commands.bat:249: msr -c -p Node1.tmp -PA -e ".All.|4000|8000"  ## This is an expanded xml that has replaced NAME value settings.
Replaced 24 lines(9.52%) in 1 files(100%)
Return-Value63[19] = 24 : msr -c -j -p example-commands.bat -x name -o NAME -ie "name|come" -T 3

Run-Command63[20] = msr -c -j -p example-commands.bat -t name -o come -ie "name|come" -a -L 19 -H 9
example-commands.bat:19: msr -c -p %~dp0 -f bat -l -PIC -H 0
example-commands.bat:20: msr -c -p %~dp0 -l -f bat -H -2 # Should skip top 2 items.
example-commands.bat:21: msr -c -p %~dp0 -l -f bat -T -2 # Should skip bottom 2 items.
example-commands.bat:22: msr -c -p %~dp0 -l -f bat -H -2 --sz # Should skip top 2 items.
example-commands.bat:23: msr -c -p %~dp0 -l -f bat -T -2 --wt # Should skip bottom 2 items.
example-commands.bat:24: msr -c -p %~dp0 -l -f bat -H 2 --wt # Should show top 2 items.
example-commands.bat:25: msr -c -p %~dp0 -l -f bat -T 2 # Should show bottom 2 items.
example-commands.bat:26: msr -c -p %~dp0\sample-file.txt -L 7 -N 9 -t Not -U 2 -D 2
example-commands.bat:27: msr -c -p %~dp0\sample-file.txt -it node --nt "node\d+"
Replaced 24 lines(9.52%) in 1 files(100%)
Return-Value63[20] = 24 : msr -c -j -p example-commands.bat -t name -o come -ie "name|come" -a -L 19 -H 9

Run-Command63[21] = msr -c -j -p example-commands.bat -t name -a -o NAM -ie "name|come" -L 19 -H 9
example-commands.bat:19: msr -c -p %~dp0 -f bat -l -PIC -H 0
example-commands.bat:20: msr -c -p %~dp0 -l -f bat -H -2 # Should skip top 2 items.
example-commands.bat:21: msr -c -p %~dp0 -l -f bat -T -2 # Should skip bottom 2 items.
example-commands.bat:22: msr -c -p %~dp0 -l -f bat -H -2 --sz # Should skip top 2 items.
example-commands.bat:23: msr -c -p %~dp0 -l -f bat -T -2 --wt # Should skip bottom 2 items.
example-commands.bat:24: msr -c -p %~dp0 -l -f bat -H 2 --wt # Should show top 2 items.
example-commands.bat:25: msr -c -p %~dp0 -l -f bat -T 2 # Should show bottom 2 items.
example-commands.bat:26: msr -c -p %~dp0\sample-file.txt -L 7 -N 9 -t Not -U 2 -D 2
example-commands.bat:27: msr -c -p %~dp0\sample-file.txt -it node --nt "node\d+"
Replaced 24 lines(9.52%) in 1 files(100%)
Return-Value63[21] = 24 : msr -c -j -p example-commands.bat -t name -a -o NAM -ie "name|come" -L 19 -H 9

Run-Command63[22] = msr -c -j -p example-commands.bat -x name -o NAME -ie "name|come" -t not -U 3 -D 3
example-commands.bat:73: msr -c -p %~dp0\example-commands.bat -x name -o NAME -ie "name|come" -T 3
example-commands.bat:74: msr -c -p %~dp0\example-commands.bat -t name -o come -ie "name|come" -a -L 19 -H 9
example-commands.bat:75: msr -c -p %~dp0\example-commands.bat -t name -a -o NAM -ie "name|come" -L 19 -H 9
example-commands.bat:76: msr -c -p %~dp0\example-commands.bat -x NAME -o NAME -ie "NAME|come" -t not -U 3 -D 3
example-commands.bat:77: msr -c -p %~dp0\sample-file.txt -ib "<Tag Name.*?\b(Node1|Node2)\b" -Q "<MailAddress>|</Tag>" -e "MailTo" -t body -o BODY -a
example-commands.bat:78: msr -c -p %~dp0\sample-file.txt -ib "<Tag Name.*?\b(Node2)\b" -Q "<MailAddress>|</Tag>" -e MailTo -t body -o BODY -a
example-commands.bat:79: msr -c -p %~dp0\sample-file.txt -ib "<Tag Name.*?\b(\w+)\b" -Q "<MailAddress>|</Tag>" -t Node1 -e "<.?Tag.*?>" -a
Replaced 1 lines(0.40%) in 1 files(100%)
Return-Value63[22] = 1 : msr -c -j -p example-commands.bat -x name -o NAME -ie "name|come" -t not -U 3 -D 3

Run-Command63[23] = msr -c -j -p sample-file.txt -ib "<Tag Name.*?\b(Node1|Node2)\b" -Q "<MailAddress>|</Tag>" -e "MailTo" -t body -o BODY -a
sample-file.txt:47: <Tag Name="Node1">
sample-file.txt:48:   <as::item ref="NodeCitOnly" />
sample-file.txt:49:   <as::item ref="Node1Config" />
sample-file.txt:50:   <MailTo>Alex@abc.com</MailTo>
sample-file.txt:51:   <as::item ref="Node1BODY">
sample-file.txt:52:     <as::pairs>
sample-file.txt:53:       <as::pair name="MailTo">Bob@abc.com</as::pair>
sample-file.txt:54:       <as::pair name="Function">#FUNCTION#</as::pair>
sample-file.txt:55:       <as::pair name="Interval">#THRESHOLD_1#</as::pair>
sample-file.txt:56:       <as::pair name="Switch">#THRESHOLD_2#</as::pair>
sample-file.txt:57:     </as::pairs>
sample-file.txt:58:   </as::item>
sample-file.txt:59: </Tag>
sample-file.txt:61: <Tag Name="Node2">
sample-file.txt:62:   <as::item ref="NodeCitOnly" />
sample-file.txt:63:   <as::item ref="Node2Config" />
sample-file.txt:64: 
sample-file.txt:65:   <MailTo>Bob@abc.com</MailTo>
sample-file.txt:66:   <SubArgs />
sample-file.txt:67:   <Subject>Node 2 title in BODY for test</Subject>
sample-file.txt:68:   <Hosts>
sample-file.txt:69:     <HBrgetHost>HB</HBrgetHost>
sample-file.txt:70:     <Type>BBB</Type>
sample-file.txt:71:   </Hosts>
sample-file.txt:72: </Tag>
Replaced 2 blocks(100%) with 2 lines(1.49%) in 1 files(100%)
Return-Value63[23] = 2 : msr -c -j -p sample-file.txt -ib "<Tag Name.*?\b(Node1|Node2)\b" -Q "<MailAddress>|</Tag>" -e "MailTo" -t body -o BODY -a

Run-Command63[24] = msr -c -j -p sample-file.txt -ib "<Tag Name.*?\b(Node2)\b" -Q "<MailAddress>|</Tag>" -e MailTo -t body -o BODY -a
sample-file.txt:61: <Tag Name="Node2">
sample-file.txt:62:   <as::item ref="NodeCitOnly" />
sample-file.txt:63:   <as::item ref="Node2Config" />
sample-file.txt:64: 
sample-file.txt:65:   <MailTo>Bob@abc.com</MailTo>
sample-file.txt:66:   <SubArgs />
sample-file.txt:67:   <Subject>Node 2 title in BODY for test</Subject>
sample-file.txt:68:   <Hosts>
sample-file.txt:69:     <HBrgetHost>HB</HBrgetHost>
sample-file.txt:70:     <Type>BBB</Type>
sample-file.txt:71:   </Hosts>
sample-file.txt:72: </Tag>
Replaced 1 blocks(100%) with 1 lines(0.75%) in 1 files(100%)
Return-Value63[24] = 1 : msr -c -j -p sample-file.txt -ib "<Tag Name.*?\b(Node2)\b" -Q "<MailAddress>|</Tag>" -e MailTo -t body -o BODY -a

Run-Command63[25] = msr -c -j -p example-commands.bat -it name -o NAME -e Names -x update
example-commands.bat:80: msr -c -p %~dp0\example-commands.bat -it NAME -o NAME -e NAMEs -x update
example-commands.bat:82: msr -c -p %~dp0\example-commands.bat -ix update -t NAME -e NAMEs
Replaced 2 lines(0.79%) in 1 files(100%)
Return-Value63[25] = 2 : msr -c -j -p example-commands.bat -it name -o NAME -e Names -x update

Run-Command63[26] = msr -c -j -p sample-file.txt -it "<name>(#.+?)</name>\s*<value>(.+?)</value>" -S -o "msr -x \"$1\" -o \"$2\"" -L 14 -e "-x (\S+)|-o (\S+)|msr " -q "block"
sample-file.txt:14: class DeferredRun {
public:
        DeferredRun(const std::function<void()>& run) : _run(run) { }
        ~DeferredRun() {
                _run();
        }
private:
        const std::function<void()> _run;
};

int main(int argc, char* argv[])
{
        auto hFile = OpenHandle(argv[1]);

        DeferredRun deferredRun([&]() {
                CloseHandle(hFile);
        });
}

<pair>
    msr -x "#FUNCTION#" -o "'All'"
</pair>
<pair>
    msr -x "#THRESHOLD_1#" -o "4000"
</pair>
<pair>
    msr -x "#THRESHOLD_2#" -o "8000"
</pair>


<Tag Name="Node1">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node1Config" />
  <MailTo>Alex@abc.com</MailTo>
  <as::item ref="Node1Body">
    <as::pairs>
      <as::pair name="MailTo">Bob@abc.com</as::pair>
      <as::pair name="Function">#FUNCTION#</as::pair>
      <as::pair name="Interval">#THRESHOLD_1#</as::pair>
      <as::pair name="Switch">#THRESHOLD_2#</as::pair>
    </as::pairs>
  </as::item>
</Tag>

<Tag Name="Node2">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node2Config" />

  <MailTo>Bob@abc.com</MailTo>
  <SubArgs />
  <Subject>Node 2 title in body for test</Subject>
  <Hosts>
    <HBrgetHost>HB</HBrgetHost>
    <Type>BBB</Type>
  </Hosts>
</Tag>

<Tag Name="Node3">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node3Config" />

  <MailTo>Clark@abc.com</MailTo>
  <AllowReTry>true</AllowReTry>
  <SubArgs>
    <SubArg>HBase</SubArg>
  </SubArgs>
  <Subject>Node3 title in body for test</Subject>
  <Hosts>
    <HBrgetHost>LZHOST</HBrgetHost>
  </Hosts>
</Tag>

--- arbitrary block to match replace  ----------
Replaced 76 lines(85.39%) in 1 files(100%)
Return-Value63[26] = 76 : msr -c -j -p sample-file.txt -it "<name>(#.+?)</name>\s*<value>(.+?)</value>" -S -o "msr -x \"$1\" -o \"$2\"" -L 14 -e "-x (\S+)|-o (\S+)|msr " -q "block"

Run-Command63[27] = msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 90 -N 100 -it key2 -a -o KEY
sample-file.txt:90: [section1]
sample-file.txt:91: key1=value1
sample-file.txt:92: KEY=value2
sample-file.txt:93: 
Replaced 1 blocks(33.33%) with 1 lines(1.00%) in 1 files(100%)
Return-Value63[27] = 1 : msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 90 -N 100 -it key2 -a -o KEY

Run-Command63[28] = msr -c -j -p sample-file.txt -b "^\s*<Tag" -Q "^\s*</Tag" -t title -o TITLE --nt Node3 -a
sample-file.txt:61: <Tag Name="Node2">
sample-file.txt:62:   <as::item ref="NodeCitOnly" />
sample-file.txt:63:   <as::item ref="Node2Config" />
sample-file.txt:64: 
sample-file.txt:65:   <MailTo>Bob@abc.com</MailTo>
sample-file.txt:66:   <SubArgs />
sample-file.txt:67:   <Subject>Node 2 TITLE in body for test</Subject>
sample-file.txt:68:   <Hosts>
sample-file.txt:69:     <HBrgetHost>HB</HBrgetHost>
sample-file.txt:70:     <Type>BBB</Type>
sample-file.txt:71:   </Hosts>
sample-file.txt:72: </Tag>
Replaced 1 blocks(33.33%) with 1 lines(0.75%) in 1 files(100%)
Return-Value63[28] = 1 : msr -c -j -p sample-file.txt -b "^\s*<Tag" -Q "^\s*</Tag" -t title -o TITLE --nt Node3 -a

Run-Command63[29] = msr -c -j -p sample-file.txt -b "^\s*<Tag" -Q "^\s*</Tag" -t title -o TITLE --nt Node3
sample-file.txt:67:   <Subject>Node 2 TITLE in body for test</Subject>
Replaced 1 blocks(33.33%) with 1 lines(0.75%) in 1 files(100%)
Return-Value63[29] = 1 : msr -c -j -p sample-file.txt -b "^\s*<Tag" -Q "^\s*</Tag" -t title -o TITLE --nt Node3

Run-Command63[30] = msr -c -j -p sample-file.txt -b "^\s*<Tag" -Q "^\s*</Tag" -t title -o TITLE --nt Node3 -y
sample-file.txt:67:   <Subject>Node 2 TITLE in body for test</Subject>
Replaced 1 blocks(33.33%) with 1 lines(0.75%) in 1 files(100%)
Return-Value63[30] = 1 : msr -c -j -p sample-file.txt -b "^\s*<Tag" -Q "^\s*</Tag" -t title -o TITLE --nt Node3 -y

Run-Command63[31] = msr -c -j -p sample-file.txt -b "^\s*<Tag" -Q "^\s*</Tag" -t title -o TITLE --nt Node3 -y -a
sample-file.txt:61: <Tag Name="Node2">
sample-file.txt:62:   <as::item ref="NodeCitOnly" />
sample-file.txt:63:   <as::item ref="Node2Config" />
sample-file.txt:64: 
sample-file.txt:65:   <MailTo>Bob@abc.com</MailTo>
sample-file.txt:66:   <SubArgs />
sample-file.txt:67:   <Subject>Node 2 TITLE in body for test</Subject>
sample-file.txt:68:   <Hosts>
sample-file.txt:69:     <HBrgetHost>HB</HBrgetHost>
sample-file.txt:70:     <Type>BBB</Type>
sample-file.txt:71:   </Hosts>
sample-file.txt:72: </Tag>
Replaced 1 blocks(33.33%) with 1 lines(0.75%) in 1 files(100%)
Return-Value63[31] = 1 : msr -c -j -p sample-file.txt -b "^\s*<Tag" -Q "^\s*</Tag" -t title -o TITLE --nt Node3 -y -a

Run-Command63[32] = msr -c -j -p sample-file.txt -S -L 90 -N 100 -it "\s*\[section1.*?value2\s*" -o ""
sample-file.txt:90: [section2]
key1=value1
key=value

[section3]
key=value

Replaced 11 lines(11.00%) in 1 files(100%)
Return-Value63[32] = 11 : msr -c -j -p sample-file.txt -S -L 90 -N 100 -it "\s*\[section1.*?value2\s*" -o ""

Run-Command63[33] = msr -c -j -p sample-file.txt -S -it "\s*\[section1.*?value2" -o ""
sample-file.txt:1: 2012-12-27 00:02:02.222 first  line time at 2
2012-12-27 00:01:01.111 second line time at 1
2012-12-27 00:03:03.333 third  line time at 3
2012-12-27 00:04:04.444 forth  line time at 4
2012-12-27 00:05:05.555 fifth  line time at 5

enum class LineType {
    NotMatchedLine = 0,
    MatchedLine = 1,
    UpLine = 2,
    DownLine = 3
};

class DeferredRun {
public:
        DeferredRun(const std::function<void()>& run) : _run(run) { }
        ~DeferredRun() {
                _run();
        }
private:
        const std::function<void()> _run;
};

int main(int argc, char* argv[])
{
        auto hFile = OpenHandle(argv[1]);

        DeferredRun deferredRun([&]() {
                CloseHandle(hFile);
        });
}

<pair>
    <Name>#FUNCTION#</Name>
    <Value>'All'</Value>
</pair>
<pair>
    <Name>#THRESHOLD_1#</Name>
    <Value>4000</Value>
</pair>
<pair>
    <Name>#THRESHOLD_2#</Name>
    <Value>8000</Value>
</pair>


<Tag Name="Node1">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node1Config" />
  <MailTo>Alex@abc.com</MailTo>
  <as::item ref="Node1Body">
    <as::pairs>
      <as::pair name="MailTo">Bob@abc.com</as::pair>
      <as::pair name="Function">#FUNCTION#</as::pair>
      <as::pair name="Interval">#THRESHOLD_1#</as::pair>
      <as::pair name="Switch">#THRESHOLD_2#</as::pair>
    </as::pairs>
  </as::item>
</Tag>

<Tag Name="Node2">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node2Config" />

  <MailTo>Bob@abc.com</MailTo>
  <SubArgs />
  <Subject>Node 2 title in body for test</Subject>
  <Hosts>
    <HBrgetHost>HB</HBrgetHost>
    <Type>BBB</Type>
  </Hosts>
</Tag>

<Tag Name="Node3">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node3Config" />

  <MailTo>Clark@abc.com</MailTo>
  <AllowReTry>true</AllowReTry>
  <SubArgs>
    <SubArg>HBase</SubArg>
  </SubArgs>
  <Subject>Node3 title in body for test</Subject>
  <Hosts>
    <HBrgetHost>LZHOST</HBrgetHost>
  </Hosts>
</Tag>

--- arbitrary block to match replace  ----------

[section2]
key1=value1
key=value

[section3]
key=value

[section4]

[section5]
key1=value1
key2=value2
[section6]
key1=value1
key2=value2
[section7]
key=value
[section8]
[section9]

--section1---------------
section 1 line 1
section 1 line 2
--section2---------------
second section line 1
second section line 2
--------------------section3
section 3 line 1
section 3 line 2
--------------------section4
section 4 line 1
--------------------section5
section 5 line 1
--------------------section6
line 6.1
--------------------section7
section 6 line 1
--------------------section8
--------------------section9
line 9.1
Replaced 134 lines(100%) in 1 files(100%)
Return-Value63[33] = 134 : msr -c -j -p sample-file.txt -S -it "\s*\[section1.*?value2" -o ""

Run-Command63[34] = msr -c -j -p sample-file.txt -S -it "\s*\[section1.*?(value2)" -o "$1" -L 88 -N 101
sample-file.txt:88: 
--- arbitrary block to match replace  ----------value2

[section2]
key1=value1
key=value

[section3]
key=value

[section4]
Replaced 14 lines(13.86%) in 1 files(100%)
Return-Value63[34] = 14 : msr -c -j -p sample-file.txt -S -it "\s*\[section1.*?(value2)" -o "$1" -L 88 -N 101

Run-Command63[35] = msr -c -j -p sample-file.txt -S -it "\[section1.*?(value2)" -o "$1" -L 88 -N 101
sample-file.txt:88: 
--- arbitrary block to match replace  ----------
value2

[section2]
key1=value1
key=value

[section3]
key=value

[section4]
Replaced 14 lines(13.86%) in 1 files(100%)
Return-Value63[35] = 14 : msr -c -j -p sample-file.txt -S -it "\[section1.*?(value2)" -o "$1" -L 88 -N 101

Run-Command63[36] = msr -c -j -p sample-file.txt -S -it "\[section1.*?(value2)" -o "$1"  -b "arbitrary block" -N 101
sample-file.txt:89: --- arbitrary block to match replace  ----------
value2

[section2]
key1=value1
key=value

[section3]
key=value

[section4]
Replaced 13 lines(12.87%) in 1 files(100%)
Return-Value63[36] = 13 : msr -c -j -p sample-file.txt -S -it "\[section1.*?(value2)" -o "$1"  -b "arbitrary block" -N 101

Run-Command63[37] = msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section1.*" -o ""
sample-file.txt:90: 
Replaced 1 blocks(14.29%) with 4 lines(2.99%) in 1 files(100%)
Return-Value63[37] = 1 : msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section1.*" -o ""

Run-Command63[38] = msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section1.*?value2" -o "value2"
sample-file.txt:90: value2

Replaced 1 blocks(14.29%) with 4 lines(2.99%) in 1 files(100%)
Return-Value63[38] = 1 : msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section1.*?value2" -o "value2"

Run-Command63[39] = msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "\s*\[section1.*?value2" -o "value2"
sample-file.txt:90: value2

Replaced 1 blocks(14.29%) with 4 lines(2.99%) in 1 files(100%)
Return-Value63[39] = 1 : msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "\s*\[section1.*?value2" -o "value2"

Run-Command63[40] = msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section.*" -o ""
sample-file.txt:90: 
sample-file.txt:94: 
sample-file.txt:98: 
sample-file.txt:101: 
sample-file.txt:103: 
sample-file.txt:109: 
sample-file.txt:112: 
Replaced 7 blocks(100%) with 22 lines(16.42%) in 1 files(100%)
Return-Value63[40] = 7 : msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section.*" -o ""

Run-Command63[41] = msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -x section1 -S -it "^\s*\[section.*" -o ""
sample-file.txt:90: 
Replaced 1 blocks(14.29%) with 4 lines(2.99%) in 1 files(100%)
Return-Value63[41] = 1 : msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -x section1 -S -it "^\s*\[section.*" -o ""

Run-Command63[42] = msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 90 -N 93 -S -it "\[section1.*?(value2)" -o "$1"
sample-file.txt:90: value2

Replaced 1 blocks(100%) with 4 lines(4.30%) in 1 files(100%)
Return-Value63[42] = 1 : msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 90 -N 93 -S -it "\[section1.*?(value2)" -o "$1"

Run-Command63[43] = msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 90 -N 93 -S -it "\[section1.*?(value2)\s*" -o "$1"
sample-file.txt:90: value2
Replaced 1 blocks(100%) with 4 lines(4.30%) in 1 files(100%)
Return-Value63[43] = 1 : msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 90 -N 93 -S -it "\[section1.*?(value2)\s*" -o "$1"

Run-Command63[44] = msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 90 -N 100 -S -it "\[section1.*?(value2)" -o "$1"
sample-file.txt:90: value2

Replaced 1 blocks(33.33%) with 4 lines(4.00%) in 1 files(100%)
Return-Value63[44] = 1 : msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -L 90 -N 100 -S -it "\[section1.*?(value2)" -o "$1"

Run-Command63[45] = msr -c -j -p sample-file.txt -L 90 -N 93 -S -it "\[section1.*?(value2)" -o "$1"
sample-file.txt:90: value2

Replaced 4 lines(4.30%) in 1 files(100%)
Return-Value63[45] = 4 : msr -c -j -p sample-file.txt -L 90 -N 93 -S -it "\[section1.*?(value2)" -o "$1"

Run-Command63[46] = msr -c -j -p sample-file.txt -L 90 -N 100 -S -it "\[section1.*?(value2)" -o "$1"
sample-file.txt:90: value2

[section2]
key1=value1
key=value

[section3]
key=value

Replaced 11 lines(11.00%) in 1 files(100%)
Return-Value63[46] = 11 : msr -c -j -p sample-file.txt -L 90 -N 100 -S -it "\[section1.*?(value2)" -o "$1"

Run-Command63[47] = msr -c -j -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -t "^(\s*\"settings.*?\{[^\r\n]*)([\r\n]+)(\s*)" -o "\1\2\3\"type\": \"string\",\2\3"
sample-block.json:10:     "settings.skipFolders": {
        "type": "string",
        "default": "Debug|bin|Relase",
        "description": "Default Regex pattern to skip folders."
    }
Replaced 1 blocks(50.00%) with 4 lines(26.67%) in 1 files(100%)
Return-Value63[47] = 1 : msr -c -j -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -t "^(\s*\"settings.*?\{[^\r\n]*)([\r\n]+)(\s*)" -o "\1\2\3\"type\": \"string\",\2\3"

Run-Command63[48] = msr -c -j -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -t "[\r\n]+\s*\"default[^\r\n]*" -o ""
sample-block.json:10:     "settings.skipFolders": {
        "description": "Default Regex pattern to skip folders."
    }
Replaced 1 blocks(50.00%) with 4 lines(26.67%) in 1 files(100%)
Return-Value63[48] = 1 : msr -c -j -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -t "[\r\n]+\s*\"default[^\r\n]*" -o ""

Run-Command63[49] = msr -c -j -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -t ".*" -o ""
sample-block.json:10: 
Replaced 1 blocks(50.00%) with 4 lines(26.67%) in 1 files(100%)
Return-Value63[49] = 1 : msr -c -j -p .\sample-block.json -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -t ".*" -o ""

Run-Command63[50] = msr -c -j -p .\sample-block.json -b "^\s*\"settings.skip.*?\{" -q "skip folders" -S -t "[\r\n]+\s*\"default[^\r\n]*" -o ""
sample-block.json:10:     "settings.skipFolders": {
        "description": "Default Regex pattern to skip folders."
Replaced 3 lines(25.00%) in 1 files(100%)
Return-Value63[50] = 3 : msr -c -j -p .\sample-block.json -b "^\s*\"settings.skip.*?\{" -q "skip folders" -S -t "[\r\n]+\s*\"default[^\r\n]*" -o ""

Run-Command63[51] = msr -c -j -p .\sample-block.json -b "^\s*\"settings.skip.*?\{" -q "skip folders" -S -t ".*" -o ""
sample-block.json:10: 
Replaced 3 lines(25.00%) in 1 files(100%)
Return-Value63[51] = 3 : msr -c -j -p .\sample-block.json -b "^\s*\"settings.skip.*?\{" -q "skip folders" -S -t ".*" -o ""

Run-Command63[52] = msr -c -j -p sample-file.txt -b "^\s*<Tag" -Q "^\s*</Tag" -t title -o TITLE --nt Node3
sample-file.txt:67:   <Subject>Node 2 TITLE in body for test</Subject>
Replaced 1 blocks(33.33%) with 1 lines(0.75%) in 1 files(100%)
Return-Value63[52] = 1 : msr -c -j -p sample-file.txt -b "^\s*<Tag" -Q "^\s*</Tag" -t title -o TITLE --nt Node3

Run-Command63[53] = msr -c -j -p sample-file.txt -S -L 90 -N 100 -it "\s*\[section1.*?value2\s*" -o ""
sample-file.txt:90: [section2]
key1=value1
key=value

[section3]
key=value

Replaced 11 lines(11.00%) in 1 files(100%)
Return-Value63[53] = 11 : msr -c -j -p sample-file.txt -S -L 90 -N 100 -it "\s*\[section1.*?value2\s*" -o ""

Run-Command63[54] = msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section1.*" -o ""
sample-file.txt:90: 
Replaced 1 blocks(14.29%) with 4 lines(2.99%) in 1 files(100%)
Return-Value63[54] = 1 : msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section1.*" -o ""

Run-Command63[55] = msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section.*" -o ""
sample-file.txt:90: 
sample-file.txt:94: 
sample-file.txt:98: 
sample-file.txt:101: 
sample-file.txt:103: 
sample-file.txt:109: 
sample-file.txt:112: 
Replaced 7 blocks(100%) with 22 lines(16.42%) in 1 files(100%)
Return-Value63[55] = 7 : msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section.*" -o ""

Run-Command63[56] = msr -c -j -p sample-file.txt -S -it "\s*\[section1.*?value2" -o ""
sample-file.txt:1: 2012-12-27 00:02:02.222 first  line time at 2
2012-12-27 00:01:01.111 second line time at 1
2012-12-27 00:03:03.333 third  line time at 3
2012-12-27 00:04:04.444 forth  line time at 4
2012-12-27 00:05:05.555 fifth  line time at 5

enum class LineType {
    NotMatchedLine = 0,
    MatchedLine = 1,
    UpLine = 2,
    DownLine = 3
};

class DeferredRun {
public:
        DeferredRun(const std::function<void()>& run) : _run(run) { }
        ~DeferredRun() {
                _run();
        }
private:
        const std::function<void()> _run;
};

int main(int argc, char* argv[])
{
        auto hFile = OpenHandle(argv[1]);

        DeferredRun deferredRun([&]() {
                CloseHandle(hFile);
        });
}

<pair>
    <Name>#FUNCTION#</Name>
    <Value>'All'</Value>
</pair>
<pair>
    <Name>#THRESHOLD_1#</Name>
    <Value>4000</Value>
</pair>
<pair>
    <Name>#THRESHOLD_2#</Name>
    <Value>8000</Value>
</pair>


<Tag Name="Node1">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node1Config" />
  <MailTo>Alex@abc.com</MailTo>
  <as::item ref="Node1Body">
    <as::pairs>
      <as::pair name="MailTo">Bob@abc.com</as::pair>
      <as::pair name="Function">#FUNCTION#</as::pair>
      <as::pair name="Interval">#THRESHOLD_1#</as::pair>
      <as::pair name="Switch">#THRESHOLD_2#</as::pair>
    </as::pairs>
  </as::item>
</Tag>

<Tag Name="Node2">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node2Config" />

  <MailTo>Bob@abc.com</MailTo>
  <SubArgs />
  <Subject>Node 2 title in body for test</Subject>
  <Hosts>
    <HBrgetHost>HB</HBrgetHost>
    <Type>BBB</Type>
  </Hosts>
</Tag>

<Tag Name="Node3">
  <as::item ref="NodeCitOnly" />
  <as::item ref="Node3Config" />

  <MailTo>Clark@abc.com</MailTo>
  <AllowReTry>true</AllowReTry>
  <SubArgs>
    <SubArg>HBase</SubArg>
  </SubArgs>
  <Subject>Node3 title in body for test</Subject>
  <Hosts>
    <HBrgetHost>LZHOST</HBrgetHost>
  </Hosts>
</Tag>

--- arbitrary block to match replace  ----------

[section2]
key1=value1
key=value

[section3]
key=value

[section4]

[section5]
key1=value1
key2=value2
[section6]
key1=value1
key2=value2
[section7]
key=value
[section8]
[section9]

--section1---------------
section 1 line 1
section 1 line 2
--section2---------------
second section line 1
second section line 2
--------------------section3
section 3 line 1
section 3 line 2
--------------------section4
section 4 line 1
--------------------section5
section 5 line 1
--------------------section6
line 6.1
--------------------section7
section 6 line 1
--------------------section8
--------------------section9
line 9.1
Replaced 134 lines(100%) in 1 files(100%)
Return-Value63[56] = 134 : msr -c -j -p sample-file.txt -S -it "\s*\[section1.*?value2" -o ""

Run-Command63[57] = msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section.*" -o ""
sample-file.txt:90: 
sample-file.txt:94: 
sample-file.txt:98: 
sample-file.txt:101: 
sample-file.txt:103: 
sample-file.txt:109: 
sample-file.txt:112: 
Replaced 7 blocks(100%) with 22 lines(16.42%) in 1 files(100%)
Return-Value63[57] = 7 : msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section.*" -o ""

Run-Command63[58] = msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section.*" -o ""
sample-file.txt:90: 
sample-file.txt:94: 
sample-file.txt:98: 
sample-file.txt:101: 
sample-file.txt:103: 
sample-file.txt:109: 
sample-file.txt:112: 
Replaced 7 blocks(100%) with 22 lines(16.42%) in 1 files(100%)
Return-Value63[58] = 7 : msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section.*" -o ""

Run-Command63[59] = msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section.*" -o "" -y
sample-file.txt:90: 
sample-file.txt:94: 
sample-file.txt:98: 
sample-file.txt:101: 
sample-file.txt:103: 
sample-file.txt:106: 
sample-file.txt:109: 
sample-file.txt:111: 
sample-file.txt:112: 
Replaced 9 blocks(100%) with 24 lines(17.91%) in 1 files(100%)
Return-Value63[59] = 9 : msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section.*" -o "" -y

Run-Command63[60] = msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section.*" -o "" -y
sample-file.txt:90: 
sample-file.txt:94: 
sample-file.txt:98: 
sample-file.txt:101: 
sample-file.txt:103: 
sample-file.txt:106: 
sample-file.txt:109: 
sample-file.txt:111: 
sample-file.txt:112: 
Replaced 9 blocks(100%) with 24 lines(17.91%) in 1 files(100%)
Return-Value63[60] = 9 : msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -S -it "^\s*\[section.*" -o "" -y

Run-Command63[61] = msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -x section1 -S -it "^\s*\[section.*" -o ""
sample-file.txt:90: 
Replaced 1 blocks(14.29%) with 4 lines(2.99%) in 1 files(100%)
Return-Value63[61] = 1 : msr -c -j -p sample-file.txt -b "^\s*\[" -Q "^\s*\[|^\s*$" -x section1 -S -it "^\s*\[section.*" -o ""

Run-Command63[62] = msr -c -j -p sample-file.txt -t "\b(NotMatchedLine|MatchedLine|UpLine|DownLine)" -o "LineType::$1" --nt "=\s*\d+"
Replaced 0 lines in 0 files
Return-Value63[62] = 0 : msr -c -j -p sample-file.txt -t "\b(NotMatchedLine|MatchedLine|UpLine|DownLine)" -o "LineType::$1" --nt "=\s*\d+"

Run-Command63[63] = msr -c -j -p sample-file.txt -t "\b(NotMatchedLine|MatchedLine|UpLine|DownLine)" -o "LineType::$1"
sample-file.txt:8:     LineType::NotMatchedLine = 0,
sample-file.txt:9:     LineType::MatchedLine = 1,
sample-file.txt:10:     LineType::UpLine = 2,
sample-file.txt:11:     LineType::DownLine = 3
Replaced 4 lines(2.99%) in 1 files(100%)
Return-Value63[63] = 4 : msr -c -j -p sample-file.txt -t "\b(NotMatchedLine|MatchedLine|UpLine|DownLine)" -o "LineType::$1"

Total executed lines = 63, non-zero-return-count = 60, return-zero-count = 3, positive-return-count = 60, negative-return-count = 0, positive-return-sum = 856, negative-return-sum = 0, exceptions = 0. Matched 60 lines(95.24%) from stdin
Run-Command[1] = type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$"
:5:     "settings.debug": {
:6:         "type": "boolean",
:7:         "default": false,
:8:         "description": "Print debug info."
:9:     },
:10:     "settings.skipFolders": {
:11:         "default": "Debug|bin|Relase",
:12:         "description": "Default Regex pattern to skip folders."
:13:     }
Matched 2 blocks(100%) with 9 lines(64.29%) from stdin
Return-Value[1] = 2 : type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$"

Run-Command[2] = type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -a
:5:     "settings.debug": {
:6:         "type": "boolean",
:7:         "default": false,
:8:         "description": "Print debug info."
:9:     },
:10:     "settings.skipFolders": {
:11:         "default": "Debug|bin|Relase",
:12:         "description": "Default Regex pattern to skip folders."
:13:     }
Matched 2 blocks(100%) with 9 lines(64.29%) from stdin
Return-Value[2] = 2 : type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -a

Run-Command[3] = type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nx "\"type"
:10:     "settings.skipFolders": {
:11:         "default": "Debug|bin|Relase",
:12:         "description": "Default Regex pattern to skip folders."
:13:     }
Matched 1 blocks(50.00%) with 4 lines(28.57%) from stdin
Return-Value[3] = 1 : type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nx "\"type"

Run-Command[4] = type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nt "^\s*\"type"
:10:     "settings.skipFolders": {
:11:         "default": "Debug|bin|Relase",
:12:         "description": "Default Regex pattern to skip folders."
:13:     }
Matched 1 blocks(50.00%) with 4 lines(28.57%) from stdin
Return-Value[4] = 1 : type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nt "^\s*\"type"

Run-Command[5] = type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nx "\"type" -a
:10:     "settings.skipFolders": {
:11:         "default": "Debug|bin|Relase",
:12:         "description": "Default Regex pattern to skip folders."
:13:     }
Matched 1 blocks(50.00%) with 4 lines(28.57%) from stdin
Return-Value[5] = 1 : type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nx "\"type" -a

Run-Command[6] = type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nt "^\s*\"type" -a
:10:     "settings.skipFolders": {
:11:         "default": "Debug|bin|Relase",
:12:         "description": "Default Regex pattern to skip folders."
:13:     }
Matched 1 blocks(50.00%) with 4 lines(28.57%) from stdin
Return-Value[6] = 1 : type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nt "^\s*\"type" -a

Run-Command[7] = type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nt "^\s*\"type" --nx "\"type"
:10:     "settings.skipFolders": {
:11:         "default": "Debug|bin|Relase",
:12:         "description": "Default Regex pattern to skip folders."
:13:     }
Matched 1 blocks(50.00%) with 4 lines(28.57%) from stdin
Return-Value[7] = 1 : type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nt "^\s*\"type" --nx "\"type"

Run-Command[8] = type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nt "^\s*\"type" --nx "\"type" -a
:10:     "settings.skipFolders": {
:11:         "default": "Debug|bin|Relase",
:12:         "description": "Default Regex pattern to skip folders."
:13:     }
Matched 1 blocks(50.00%) with 4 lines(28.57%) from stdin
Return-Value[8] = 1 : type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nt "^\s*\"type" --nx "\"type" -a

Run-Command[9] = type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nx "\"type"
:10:     "settings.skipFolders": {
:11:         "default": "Debug|bin|Relase",
:12:         "description": "Default Regex pattern to skip folders."
:13:     }
Matched 1 blocks(50.00%) with 4 lines(28.57%) from stdin
Return-Value[9] = 1 : type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nx "\"type"

Run-Command[10] = type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nt "^\s*\"type"
:10:     "settings.skipFolders": {
:11:         "default": "Debug|bin|Relase",
:12:         "description": "Default Regex pattern to skip folders."
:13:     }
Matched 1 blocks(50.00%) with 4 lines(28.57%) from stdin
Return-Value[10] = 1 : type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nt "^\s*\"type"

Run-Command[11] = type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nt "^\s*\"type" --nx "\"type" -a -t default
:10:     "settings.skipFolders": {
:11:         "default": "Debug|bin|Relase",
:12:         "description": "Default Regex pattern to skip folders."
:13:     }
Matched 1 blocks(50.00%) with 1 lines(7.14%) from stdin
Return-Value[11] = 1 : type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nt "^\s*\"type" --nx "\"type" -a -t default

Run-Command[12] = type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nt "^\s*\"type" -a -t default -x Debug -o debug -j
:10:     "settings.skipFolders": {
:11:         "default": "debug|bin|Relase",
:12:         "description": "Default Regex pattern to skip folders."
:13:     }
Replaced 1 blocks(50.00%) with 1 lines(7.14%) from stdin
Return-Value[12] = 1 : type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nt "^\s*\"type" -a -t default -x Debug -o debug -j

Run-Command[13] = type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nt "^\s*\"type" -a -t default -x Debug -o Debug -j
Replaced 0 blocks with 0 lines from stdin
Return-Value[13] = 0 : type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" --nt "^\s*\"type" -a -t default -x Debug -o Debug -j

Run-Command[14] = type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type"
:10:     "settings.skipFolders": {
        "default": "Debug|bin|Relase",
        "description": "Default Regex pattern to skip folders."
    }
Matched 1 blocks(50.00%) with 4 lines(28.57%) from stdin
Return-Value[14] = 1 : type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type"

Run-Command[15] = type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -a
:10:     "settings.skipFolders": {
        "default": "Debug|bin|Relase",
        "description": "Default Regex pattern to skip folders."
    }
Matched 1 blocks(50.00%) with 4 lines(28.57%) from stdin
Return-Value[15] = 1 : type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -a

Run-Command[16] = type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -a -t default
:10:     "settings.skipFolders": {
        "default": "Debug|bin|Relase",
        "description": "Default Regex pattern to skip folders."
    }
Matched 1 blocks(50.00%) with 4 lines(28.57%) from stdin
Return-Value[16] = 1 : type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -a -t default

Run-Command[17] = type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -a -t default -x Debug -o debug -j
:10:     "settings.skipFolders": {
        "default": "debug|bin|Relase",
        "description": "Default Regex pattern to skip folders."
    }
Replaced 1 blocks(50.00%) with 4 lines(28.57%) from stdin
Return-Value[17] = 1 : type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -a -t default -x Debug -o debug -j

Run-Command[18] = type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -a -t default -x Debug -o Debug -j
:10:     "settings.skipFolders": {
        "default": "Debug|bin|Relase",
        "description": "Default Regex pattern to skip folders."
    }
Replaced 0 blocks with 0 lines from stdin
Return-Value[18] = 0 : type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -a -t default -x Debug -o Debug -j

Run-Command[19] = type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -t default
:10:     "settings.skipFolders": {
        "default": "Debug|bin|Relase",
        "description": "Default Regex pattern to skip folders."
    }
Matched 1 blocks(50.00%) with 4 lines(28.57%) from stdin
Return-Value[19] = 1 : type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -t default

Run-Command[20] = type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -t default -x Debug -o debug -j
:10:     "settings.skipFolders": {
        "default": "debug|bin|Relase",
        "description": "Default Regex pattern to skip folders."
    }
Replaced 1 blocks(50.00%) with 4 lines(28.57%) from stdin
Return-Value[20] = 1 : type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -t default -x Debug -o debug -j

Run-Command[21] = type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -t default -x Debug -o Debug -j
Replaced 0 blocks with 0 lines from stdin
Return-Value[21] = 0 : type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -t default -x Debug -o Debug -j

Run-Command[22] = type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -t "^(\s*\"settings.*?\{[^\r\n]*)([\r\n]+)(\s*)" -o "\1\2\3\"type\": \"string\",\2\3"
:10:     "settings.skipFolders": {
        "type": "string",
        "default": "Debug|bin|Relase",
        "description": "Default Regex pattern to skip folders."
    }
Matched 1 blocks(50.00%) with 4 lines(28.57%) from stdin
Return-Value[22] = 1 : type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -t "^(\s*\"settings.*?\{[^\r\n]*)([\r\n]+)(\s*)" -o "\1\2\3\"type\": \"string\",\2\3"

Run-Command[23] = type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -t "^(\s*\"settings.*?\{[^\r\n]*)([\r\n]+)(\s*)" -o "\1\2\3\"type\": \"string\",\2\3" -j
:10:     "settings.skipFolders": {
        "type": "string",
        "default": "Debug|bin|Relase",
        "description": "Default Regex pattern to skip folders."
    }
Replaced 1 blocks(50.00%) with 4 lines(28.57%) from stdin
Return-Value[23] = 1 : type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -t "^(\s*\"settings.*?\{[^\r\n]*)([\r\n]+)(\s*)" -o "\1\2\3\"type\": \"string\",\2\3" -j

Run-Command[24] = type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -t "[\r\n]+\s*\"default[^\r\n]*" -o ""
:10:     "settings.skipFolders": {
        "description": "Default Regex pattern to skip folders."
    }
Matched 1 blocks(50.00%) with 4 lines(28.57%) from stdin
Return-Value[24] = 1 : type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -t "[\r\n]+\s*\"default[^\r\n]*" -o ""

Run-Command[25] = type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -t ".*" -o ""
:10: 
Matched 1 blocks(50.00%) with 4 lines(28.57%) from stdin
Return-Value[25] = 1 : type sample-block.json | msr -b "^\s*\"settings.*?\{" -Q "^\s*\}\s*,?\s*$" -S --nt "^\s*.type" -t ".*" -o ""

Run-Command[26] = type sample-block.json | msr -b "^\s*\"settings.skip.*?\{" -q "skip folders" -S -t "[\r\n]+\s*\"default[^\r\n]*" -o ""
:10:     "settings.skipFolders": {
        "description": "Default Regex pattern to skip folders."
Matched 3 lines(25.00%) from stdin
Return-Value[26] = 3 : type sample-block.json | msr -b "^\s*\"settings.skip.*?\{" -q "skip folders" -S -t "[\r\n]+\s*\"default[^\r\n]*" -o ""

Run-Command[27] = type sample-block.json | msr -b "^\s*\"settings.skip.*?\{" -q "skip folders" -S -t ".*" -o ""
:10: 
Matched 3 lines(25.00%) from stdin
Return-Value[27] = 3 : type sample-block.json | msr -b "^\s*\"settings.skip.*?\{" -q "skip folders" -S -t ".*" -o ""

Total executed lines = 27, non-zero-return-count = 24, return-zero-count = 3, positive-return-count = 24, negative-return-count = 0, positive-return-sum = 30, negative-return-sum = 0, exceptions = 0. Matched 27 lines(10.71%) in 1 files(100%)
